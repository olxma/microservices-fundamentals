version: '3.8'
services:
  storage-service-db:
    container_name: storage-service-postgres
    image: postgres:15.1-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=storage_service
    ports:
      - '5434:5432'

  resource-service-db:
    container_name: resource-service-postgres
    image: postgres:15.1-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=resource_service
    ports:
      - '5432:5432'

  song-service-db:
    container_name: song-service-postgres
    image: postgres:15.1-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=song_service
    ports:
      - '5433:5432'

  aws:
    container_name: localstack
    image: localstack/localstack
    ports:
      - '4566:4566'
      - '4572:4572'
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-broker

    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka-broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  registry-service:
    container_name: registry-service
    build:
      context: registry-service
      dockerfile: Dockerfile
    image: registry-service:latest
    env_file:
      - .env
    ports:
      - '8088:8088'

  storage-service:
    container_name: storage-service
    build:
      context: storage-service
      dockerfile: Dockerfile
    image: storage-service:latest
    depends_on:
      - registry-service
      - storage-service-db
      - aws
    env_file:
      - .env
    ports:
      - '8090:8090'

  resource-service:
    container_name: resource-service
    build:
      context: resource-service
      dockerfile: Dockerfile
    image: resource-service:latest
    depends_on:
      - registry-service
      - resource-service-db
      - kafka-broker
      - aws
    env_file:
      - .env
    ports:
      - '8085:8085'

  song-service:
    container_name: song-service
    build:
      context: song-service
      dockerfile: Dockerfile
    image: song-service:latest
    depends_on:
      - registry-service
      - song-service-db
    env_file:
      - .env
    ports:
      - '8086:8086'

  resource-processor:
    container_name: resource-processor
    build:
      context: resource-processor
      dockerfile: Dockerfile
    image: resource-processor:latest
    depends_on:
      - registry-service
      - kafka-broker
      - resource-service
      - song-service
    env_file:
      - .env
    ports:
      - '8087:8087'

  gateway-service:
    container_name: gateway-service
    build:
      context: gateway-service
      dockerfile: Dockerfile
    image: gateway-service:latest
    env_file:
      - .env
    ports:
      - '8089:8089'
