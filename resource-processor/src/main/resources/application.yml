server:
  port: ${RESOURCE_PROCESSOR_PORT:8087}

spring:
  application:
    name: RESOURCE-PROCESSOR
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
      group-id: processor
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        allow.auto.create.topics: true
        spring.json.value.default.type: com.epam.microservices.resourceprocessor.model.ResourceEvent
      backoff-interval: 1000
      max-attempts: 5
      resource-event-topic: resources
  cloud:
    openfeign:
      client:
        config:
          RESOURCE:
            connect-timeout: 5000
            read-timeout: 5000
            loggerLevel: basic
            retryer: com.epam.microservices.resourceprocessor.feign.DefaultFeignRetryer
            error-decoder: com.epam.microservices.resourceprocessor.feign.Custom5xxErrorDecoder
          SONG:
            connect-timeout: 5000
            read-timeout: 5000
            loggerLevel: basic
            retryer: com.epam.microservices.resourceprocessor.feign.DefaultFeignRetryer
            error-decoder: com.epam.microservices.resourceprocessor.feign.Custom5xxErrorDecoder

eureka:
  client:
    serviceUrl:
      defaultZone: ${DISCOVERY:http://localhost:8088/eureka/}

logging:
  level:
    liquibase: DEBUG
    com.epam.microservices.resourceprocessor: DEBUG
